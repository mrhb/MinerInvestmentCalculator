{"version":3,"sources":["./src/_services/currencies.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/main2/main2.component.ts","./src/app/main2/main2.component.html","./src/app/app.module.ts","./src/app/app-material/app-material.module.ts","./src/app/app-routing.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrenciesService {\ndollarAPI=environment.dollarAPI;\n  constructor(private http:HttpClient) { \n}\n// options: {\n//   headers?: HttpHeaders | {[header: string]: string | string[]},\n//   observe?: 'body' | 'events' | 'response',\n//   params?: HttpParams|{[param: string]: string | string[]},\n//   reportProgress?: boolean,\n//   responseType?: 'arraybuffer'|'blob'|'json'|'text',\n//   withCredentials?: boolean,\n// }\n\ngetInfo(currencyName:string): Observable<[CURRENCY]> {\n    return this.http.get<[CURRENCY]>(`https://api.minerstat.com/v2/coins?list=${currencyName}`);\n  }\ngetDoller(): Observable<any> {\n  return this.http.get(`https://cors-anywhere.herokuapp.com/https://api.codebazan.ir/arz/?type=arz`);\n  // return this.http.get(`https://cors-anywhere.herokuapp.com/`+this.dollarAPI);\n  }\n}\n\n\nexport interface CURRENCY\n{\nid: string,\ncoin: string,\nname: string,\ntype: string,\nalgorithm: string,\nnetwork_hashrate: number,\ndifficulty: number,\nreward: number,\nreward_unit: string,\nreward_block: number,\nvolume: number,\nprice: number\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  dollarAPI:\"https://hamyarandroid.com/api/api?t=currency\"\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'calculator';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatPaginator, MatPaginatorIntl } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CurrenciesService, CURRENCY } from 'src/_services/currencies.service';\n\n\n/** Constants used to fill up our data base. */\nconst MINERS=[\n{name:\"S9j\"     ,hashrate:\t14.5\t,consumption:1350},\n{name:\"S9Hydro\" ,hashrate:  18\t  ,consumption:1728},\n{name:\"M3\"      ,hashrate:\t12  \t,consumption:2000},\n{name:\"S9i\"     ,hashrate:\t13   \t,consumption:1280},\n{name:\"S9\"      ,hashrate:\t14\t  ,consumption:1372},\n{name:\"M3X\"     ,hashrate:\t12.5\t,consumption:2050},\n{name:\"S11\"     ,hashrate:\t20.5\t,consumption:1530},\n{name:\"S15\"     ,hashrate:\t28\t  ,consumption:1596},\n{name:\"S17\"     ,hashrate:\t53\t  ,consumption:2385},\n{name:\"S17\"     ,hashrate:\t56\t  ,consumption:2520},\n{name:\"S17Pro\"  ,hashrate:  50  \t,consumption:1975},\n{name:\"S17Pro\"  ,hashrate:  53  \t,consumption:2094},\n{name:\"S17+\"    ,hashrate: \t73\t  ,consumption:2920},\n{name:\"S17e\"    ,hashrate:  64  \t,consumption:2880},\n{name:\"A1\"      ,hashrate:\t49  \t,consumption:5400},\n];\n\nconst GENERATORS=[\n  {name: \"50KVA\" ,generation:100,contPower:70 ,slCurrent:2},\n  {name: \"250KVA\" ,generation:200,contPower:140, slCurrent:600},\n];\n@Component({\n  selector: 'app-main2',\n  templateUrl: './main2.component.html',\n  styleUrls: ['./main2.component.scss'],\n//   providers: [\n//    {provide: MatPaginatorIntl, useClass: CustomMatPaginatorIntl}\n//  ]\n})\nexport class Main2Component implements OnInit {\n  generators=GENERATORS;\n  miners=MINERS;\n  signupForm: FormGroup;\n  currencyForm:FormGroup;\n  // signupForm: FormGroup;\n  loading = false;\n  submitted = false;\n  displayedColumns: string[] = [ 'name','hashrate','count','MonthlyIncom','MonthlyIncom_Toman'];\n  dataSource: MatTableDataSource<minerincom>;\n\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  MinerIncoms:minerincom[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private Currencies: CurrenciesService\n     ){\n    // Assign the data to the data source for the table to render\n  }\n  \n  generator =new FormControl(this.generators[0]); //ظرفیت دیزل ژنراتور\n  dollar   =new FormControl(35750);// قیمت دلار\n  bitcoin  =new FormControl(17518);//قیمت بیتکوین به دلار\n  btc      =new FormControl(0.00000784);// پاداش استخراج بیتکوین\n  device =new FormControl(this.miners[0]); //نوع ماینر\n\n  ngOnInit(): void {\n    this.onReset();\n    this.signupForm = this.formBuilder.group({\n      generator:this.generator,\n      device:this.device\n    });\n\n    this.currencyForm=this.formBuilder.group({\n      dollar:this.dollar,\n      bitcoin:this.bitcoin,\n      btc:this.btc,\n    });\n    \n    this.calcute();\n    // this.paginator._intl.itemsPerPageLabel=\"Test String\";\n  //  this.paginator._intl=new CustomMatPaginatorIntl;\n  }\n  onSubmit()\n  {\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    }\n    this.calcute();\n    \n  }\n  onReset()\n  {\n\n    this.Currencies.getInfo(\"BTC\").subscribe(\n      data => {\n      console.log(data);\n      var reward=data[0].reward_block;\n        var hashrate=data[0].network_hashrate;\n        var coeff=144000000000000*100000000;\n      var temp=Math.floor(coeff*reward/hashrate)/100000000;\n      this.btc.setValue(temp);//      =new FormControl(temp);// پاداش استخراج بیتکوین\n      \n      this.bitcoin.setValue(Math.floor(data[0].price*100)/100);//قیمت بیتکوین به دلار\n    });\n\n\n    this.Currencies.getDoller().subscribe(\n      data => {\n      console.log(data);\n      //var temp=data.list[0].price;;\n      var x=data[29].price;\n      var temp=parseFloat(x.replace(\",\",\".\"))*100;\n      this.dollar=new FormControl(temp);// پاداش استخراج بیتکوین\n\n    });\n\n    this.generator.setValue(this.generators[0]); //ظرفیت دیزل ژنراتور\n\n   \n      this.calcute();\n    \n  }\n  calcute()\n  {\n    miner.dollar=this.dollar.value;\n    miner.capacity=this.generator.value;\n    miner.doller=this.dollar.value;\n    miner.bitcoin=this.bitcoin.value;\n    miner.btc=this.btc.value;\n    this.MinerIncoms=Array.from(MINERS, x => new miner(x));\n    this.dataSource = new MatTableDataSource(this.MinerIncoms);\n    this.ngAfterViewInit()\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\nexport interface minerincom {\n  name: string;\n  hashrate: number;\n  consumption: number;\n  count:number;\n  MonthlyIncom:number;\n  MonthlyIncom_Toman:number;\n}\n\n  export class miner {\n    static dollar;\n    static capacity;\n    static doller;\n    static bitcoin;\n    static btc;\n\n    name: string;\n    hashrate: number;\n  consumption: number;\n  \n  constructor(obj) {\n    Object.assign(this, obj);\n  }\n\n  get UnitDailyIncom(): number {\n    return this.hashrate * miner.btc * miner.bitcoin;\n  }\n  get UnitMonthlyIncom(): number {\n    return 30*this.UnitDailyIncom;\n  }\n\n  get count(): number {\n    var cnt= Math.floor(miner.capacity/this.consumption) \n    return cnt ;\n  }\n  get MonthlyIncom(): number {\n    return this.UnitMonthlyIncom*this.count;\n  }\n  get MonthlyIncom_Toman(): number {\n    return this.MonthlyIncom* miner.dollar/1000;\n  }\n}\n\n\n\n","<mat-card class=\"my-card\"   dir=\"rtl\">\r\n  <mat-card-title>\r\n    اطلاعات ارز\r\n  </mat-card-title>\r\n  <form [formGroup]=\"currencyForm\"  dir=\"rtl\">\r\n        <mat-card-content class=\"Input-form\" >\r\n      <mat-form-field appearance=\"fill\"  class=\"full-width\"  >\r\n          <mat-label>قیمت دلار</mat-label>\r\n          <input matInput type=\"number\"  [formControl]=\"dollar\"  class=\"example-right-align\">\r\n          <span matPrefix>&nbsp; تومان&nbsp; </span>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"fill\"   class=\"full-width\"  >\r\n          <mat-label>قیمت بیتکوین</mat-label>\r\n          <input matInput type=\"number\" [formControl]=\"bitcoin\"  class=\"example-right-align\">\r\n          <span matPrefix>&nbsp;$&nbsp;</span>\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"fill\"   class=\"full-width\"  >\r\n          <mat-label>پاداش استخراج </mat-label>\r\n          <input matInput type=\"number\" [formControl]=\"btc\"  class=\"example-right-align\">\r\n          <span matPrefix>&nbsp;BTC&nbsp;</span>\r\n        </mat-form-field>\r\n\r\n      </mat-card-content >\r\n          <mat-card-actions>\r\n            <button mat-button  [disabled]=\"loading\" (click)=\"onReset()\" color=\"primary\"> بازنشانی</button>\r\n          </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n    <!-- <mat-card-title>\r\n    محاسبه سود\r\n    </mat-card-title> -->\r\n\r\n    <mat-card dir=\"rtl\" class=\"my-card\">\r\n      <mat-card-title>\r\n         ماینر\r\n      </mat-card-title>\r\n      <mat-card-content >\r\n        <form [formGroup]=\"signupForm\" class=\"my-form\" dir=\"rtl\">\r\n\r\n        <mat-form-field  class=\"full-width\"  dir=\"rtl\" >\r\n          <mat-label  >انتخاب دستگاه</mat-label>\r\n          <mat-select  type=\"number\" [formControl]=\"device\"   dir=\"rtl\">\r\n            <mat-option *ngFor=\"let miner of miners\"  type=\"number\"  [value]=\"miner\" >{{miner.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        </form>\r\n        <p>تراهش: {{device.value.hashrate}}Th/s &nbsp;&nbsp;&nbsp; مصرف: {{device.value.consumption}}w</p> \r\n        <mat-divider></mat-divider>\r\n        <p>درآمدزایی ماهانه(تومان): {{30*device.value.hashrate*bitcoin.value*btc.value*dollar.value | currency :'IRR':''}}</p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card dir=\"rtl\" class=\"my-card\">\r\n      <mat-card-title>\r\n         موتور-ژنراتور\r\n      </mat-card-title>\r\n      <mat-card-content >\r\n        <form [formGroup]=\"signupForm\" class=\"my-form\" dir=\"rtl\">\r\n\r\n        <mat-form-field  class=\"full-width\"  dir=\"rtl\" >\r\n          <mat-label  >انتخاب موتور-ژنراتور</mat-label>\r\n          <mat-select  type=\"number\" [formControl]=\"generator\"   dir=\"rtl\">\r\n            <mat-option *ngFor=\"let gen of generators\"  type=\"number\"  [value]=\"gen\" >{{gen.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        </form>\r\n\r\n        <ng-container *ngIf=\"{ count:1000*generator.value.contPower/device.value.consumption | number:'1.0-0' } as variable\">\r\n          <!-- <mat-divider></mat-divider> -->\r\n          <p>توان دائم کار: {{generator.value.contPower}}کیلووات&nbsp;&nbsp;جریان تکفاز: {{generator.value.slCurrent}}آمپر</p> \r\n          <mat-divider></mat-divider>\r\n          <p>تعداد دستگاه ها:{{variable.count}}</p>\r\n          <p>درآمد ماهانه دستگاه ها(تومان): {{variable.count*30*device.value.hashrate*bitcoin.value*btc.value*dollar.value | currency :'IRR':''}}</p>\r\n          <p>درآمد ماهانه دستگاه ها($): {{variable.count*30*device.value.hashrate*bitcoin.value*btc.value*dollar.value | currency :'IRR':''}}</p>\r\n        </ng-container>\r\n      </mat-card-content>\r\n    </mat-card>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppMaterialModule } from './app-material/app-material.module';\nimport { Main2Component } from './main2/main2.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    Main2Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppMaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n  const materialModules = [\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatButtonToggleModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ReactiveFormsModule\n  ];\n  \n  @NgModule({\nimports:[materialModules],\n    exports: [\n      materialModules\n    ],\n  })\nexport class AppMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { Main2Component } from './main2/main2.component';\n\nconst routes: Routes = [\n{path:\"main\",component:MainComponent},\n{path:\"main2\",component:Main2Component},\n{ path: '',   redirectTo: '/main2', pathMatch: 'full' }, // redirect to `first-component`\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatPaginator, MatPaginatorIntl } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CustomMatPaginatorIntl } from './CustomPaginatorConfiguration';\n\n\n/** Constants used to fill up our data base. */\nconst MINERS=[\n{name:\"S9j\"     ,hashrate:\t14.5\t,consumption:1350},\n{name:\"S9i\"     ,hashrate:\t13   \t,consumption:1280},\n{name:\"S9i\"     ,hashrate:\t14   \t,consumption:1320},\n{name:\"S9\"      ,hashrate:\t11.5 \t,consumption:1127},\n{name:\"S9\"      ,hashrate:\t12.5 \t,consumption:1225},\n{name:\"S9\"      ,hashrate:\t13\t  ,consumption:1300},\n{name:\"S9\"      ,hashrate:\t14\t  ,consumption:1372},\n{name:\"S9Hydro\" ,hashrate:  18\t  ,consumption:1728},\n{name:\"M3\"      ,hashrate:\t12  \t,consumption:2000},\n{name:\"M3X\"     ,hashrate:\t12.5\t,consumption:2050},\n{name:\"S11\"     ,hashrate:\t20.5\t,consumption:1530},\n{name:\"S15\"     ,hashrate:\t28\t  ,consumption:1596},\n{name:\"S17\"     ,hashrate:\t53\t  ,consumption:2385},\n{name:\"S17\"     ,hashrate:\t56\t  ,consumption:2520},\n{name:\"S17Pro\"  ,hashrate:  50  \t,consumption:1975},\n{name:\"S17Pro\"  ,hashrate:  53  \t,consumption:2094},\n{name:\"S17+\"    ,hashrate: \t73\t  ,consumption:2920},\n{name:\"S17e\"    ,hashrate:  64  \t,consumption:2880},\n{name:\"A1\"      ,hashrate:\t49  \t,consumption:5400},\n];\n\nconst GENERATORS=[\n  {name: \"100KVA\" ,generation:100000},\n  {name: \"200KVA\" ,generation:200000},\n];\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n//   providers: [\n//    {provide: MatPaginatorIntl, useClass: CustomMatPaginatorIntl}\n//  ]\n})\nexport class MainComponent implements OnInit {\n  generators=GENERATORS;\n  miners=MINERS;\n  signupForm: FormGroup;\n  loading = false;\n  submitted = false;\n  displayedColumns: string[] = [ 'name','hashrate','count','MonthlyIncom','MonthlyIncom_Toman'];\n  dataSource: MatTableDataSource<minerincom>;\n\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  MinerIncoms:minerincom[];\n\n  constructor(private formBuilder: FormBuilder){\n    // Assign the data to the data source for the table to render\n  }\n  \n  capacity =new FormControl(100000); //ظرفیت دیزل ژنراتور\n  dollar   =new FormControl(35750);// قیمت دلار\n  bitcoin  =new FormControl(17518);//قیمت بیتکوین به دلار\n  btc      =new FormControl(0.00000784);// پاداش استخراج بیتکوین\n\n  ngOnInit(): void {\n    this.signupForm = this.formBuilder.group({\n      capacity:this.capacity,\n      dollar:this.dollar,\n      bitcoin:this.bitcoin,\n      btc:this.btc\n    });\n    this.calcute();\n    // this.paginator._intl.itemsPerPageLabel=\"Test String\";\n  //  this.paginator._intl=new CustomMatPaginatorIntl;\n  }\n  onSubmit()\n  {\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    }\n    this.calcute();\n    \n  }\n  onReset()\n  {\n    this.capacity =new FormControl(100000); //ظرفیت دیزل ژنراتور\n    this.dollar   =new FormControl(35750);// قیمت دلار\n    this.bitcoin  =new FormControl(17518);//قیمت بیتکوین به دلار\n    this.btc      =new FormControl(0.00000784);// پاداش استخراج بیتکوین\n\n      this.calcute();\n    \n  }\n  calcute()\n  {\n    miner.dollar=this.dollar.value;\n    miner.capacity=this.capacity.value;\n    miner.doller=this.dollar.value;\n    miner.bitcoin=this.bitcoin.value;\n    miner.btc=this.btc.value;\n    this.MinerIncoms=Array.from(MINERS, x => new miner(x));\n    this.dataSource = new MatTableDataSource(this.MinerIncoms);\n    this.ngAfterViewInit()\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\nexport interface minerincom {\n  name: string;\n  hashrate: number;\n  consumption: number;\n  count:number;\n  MonthlyIncom:number;\n  MonthlyIncom_Toman:number;\n}\n  \n  \n  export class miner {\n    static dollar;\n    static capacity;\n    static doller;\n    static bitcoin;\n    static btc;\n\n    name: string;\n    hashrate: number;\n  consumption: number;\n  \n  constructor(obj) {\n    Object.assign(this, obj);\n  }\n\n  get UnitDailyIncom(): number {\n    return this.hashrate * miner.btc * miner.bitcoin;\n  }\n  get UnitMonthlyIncom(): number {\n    return 30*this.UnitDailyIncom;\n  }\n\n  get count(): number {\n    var cnt= Math.floor(miner.capacity/this.consumption) \n    return cnt ;\n  }\n  get MonthlyIncom(): number {\n    return this.UnitMonthlyIncom*this.count;\n  }\n  get MonthlyIncom_Toman(): number {\n    return this.MonthlyIncom* miner.dollar/1000;\n  }\n}\n\n\n\n","<mat-card class=\"my-card\">\r\n    <mat-card-title>\r\n       محاسبه سود\r\n    </mat-card-title>\r\n \r\n     <mat-card-content>\r\n         <form [formGroup]=\"signupForm\" class=\"my-form\" dir=\"rtl\">\r\n\r\n            <mat-form-field appearance=\"fill\"  class=\"full-width\" >\r\n                <mat-label>مدل ژنراتور</mat-label>\r\n                <mat-select  type=\"number\" [formControl]=\"capacity\" >\r\n                <mat-option *ngFor=\"let gen of generators\"  type=\"number\"  [value]=\"gen.generation\" >{{gen.name}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\"  dir=\"rtl\">\r\n                <mat-label>قیمت دلار</mat-label>\r\n                <input matInput type=\"number\"  [formControl]=\"dollar\"  class=\"example-right-align\">\r\n                <span matPrefix>&nbsp; تومان&nbsp; </span>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\"  dir=\"rtl\">\r\n                <mat-label>قیمت بیتکوین</mat-label>\r\n                <input matInput type=\"number\" [formControl]=\"bitcoin\"  class=\"example-right-align\">\r\n                <span matPrefix>&nbsp;$&nbsp;</span>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\"  dir=\"rtl\">\r\n                <mat-label>پاداش استخراج </mat-label>\r\n                <input matInput type=\"number\" [formControl]=\"btc\"  class=\"example-right-align\">\r\n                <span matPrefix>&nbsp;BTC&nbsp;</span>\r\n            </mat-form-field>\r\n                \r\n          </form>\r\n        </mat-card-content>\r\n      \r\n        <mat-card-actions>\r\n          <button mat-button  [disabled]=\"loading\" (click)=\"onSubmit()\"color=\"primary\"> بروز رسانی</button>\r\n          <button mat-button  [disabled]=\"loading\" (click)=\"onReset()\" color=\"primary\"> بازنشانی</button>\r\n       </mat-card-actions>\r\n   </mat-card>\r\n\r\n\r\n\r\n   <mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n  </mat-form-field>\r\n  \r\n  <div class=\"mat-elevation-z8\" dir=\"rtl\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort  >\r\n  \r\n      <!-- Incom(toman) Column -->\r\n      <ng-container matColumnDef=\"MonthlyIncom_Toman\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header color=\"primary\"> درآمد ماهانه(هزار تومان) </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.MonthlyIncom_Toman | currency :'IRR':''}} </td>\r\n      </ng-container>\r\n  \r\n      <!-- Incom($) Column -->\r\n      <ng-container matColumnDef=\"MonthlyIncom\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header color=\"primary\"> درآمد ماهانه(دلار) </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.MonthlyIncom  | currency:'USD'}} </td>\r\n      </ng-container>\r\n\r\n      <!-- miner count Column -->\r\n      <ng-container matColumnDef=\"count\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header color=\"primary\">تعداد </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.count}} </td>\r\n      </ng-container>\r\n\r\n      <!-- hashrate Column -->\r\n      <ng-container matColumnDef=\"hashrate\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header color=\"accent\"> هش ریت </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.hashrate}}MH/s </td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> نام ماینر </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  \r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"   dir=\"rtl\"></mat-paginator>\r\n  </div>\r\n  \r\n \r\n ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}